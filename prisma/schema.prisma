generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum DocumentStatus {
  PENDING
  SIGNED
}

model user {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      account[]
  sessions      session[]
  document      document[]
  signature     signature[]
}

model account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "account_userId_fkey")
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "session_userId_fkey")
}

model document {
  id        String         @id @default(uuid())
  name      String
  fileKey   String         @unique
  userId    String
  user      user           @relation(fields: [userId], references: [id])
  status    DocumentStatus @default(PENDING)
  signature signature[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model signature {
  id           String   @id @default(uuid())
  documentId   String
  documento    document @relation(fields: [documentId], references: [id])
  userId       String
  user         user     @relation(fields: [userId], references: [id])
  signatureImg String   @db.Text
  createdAt    DateTime @default(now())
  signedAt     DateTime
}
